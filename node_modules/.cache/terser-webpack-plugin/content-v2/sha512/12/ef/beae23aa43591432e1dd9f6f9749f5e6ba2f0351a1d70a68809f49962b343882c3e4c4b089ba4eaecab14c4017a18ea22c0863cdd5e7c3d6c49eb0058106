{"map":"{\"version\":3,\"sources\":[\"/Users/nazhandzareei/Projects/demo-React/myapp/src/Todos.js\",\"/Users/nazhandzareei/Projects/demo-React/myapp/src/AddTodo.js\",\"/Users/nazhandzareei/Projects/demo-React/myapp/src/App.js\",\"/Users/nazhandzareei/Projects/demo-React/myapp/src/registerServiceWorker.js\",\"/Users/nazhandzareei/Projects/demo-React/myapp/src/index.js\"],\"names\":[\"Todos\",\"_ref\",\"todos\",\"deleteTodo\",\"todoList\",\"length\",\"map\",\"todo\",\"react_default\",\"a\",\"createElement\",\"className\",\"key\",\"id\",\"onClick\",\"content\",\"AddTodo\",\"state\",\"handleChange\",\"e\",\"_this\",\"setState\",\"target\",\"value\",\"handleSubmit\",\"preventDefault\",\"props\",\"addTodo\",\"onSubmit\",\"this\",\"type\",\"onChange\",\"Component\",\"App\",\"filter\",\"Math\",\"random\",\"concat\",\"Object\",\"toConsumableArray\",\"src_Todos\",\"src_AddTodo\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"navigator\",\"serviceWorker\",\"register\",\"then\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"console\",\"log\",\"catch\",\"error\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"URL\",\"process\",\"origin\",\"addEventListener\",\"fetch\",\"response\",\"status\",\"headers\",\"get\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\",\"registerServiceWorker\"],\"mappings\":\"2MAuBeA,EArBD,SAAAC,GAAyB,IAAvBC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,WAEfC,EAAWF,EAAMG,OACrBH,EAAMI,IAAI,SAAAC,GACR,OACEC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,kBAAkBC,IAAKL,EAAKM,IACzCL,EAAAC,EAAAC,cAAA,OAAA,CAAMI,QAAS,WAAOX,EAAWI,EAAKM,MAAON,EAAKQ,YAKxDP,EAAAC,EAAAC,cAAA,IAAA,CAAGC,UAAU,UAAb,iCAGF,OACEH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,oBACZP,ICaQY,6MA5BbC,MAAQ,CACNF,QAAS,MAEXG,aAAe,SAACC,GACdC,EAAKC,SAAS,CACZN,QAASI,EAAEG,OAAOC,WAGtBC,aAAe,SAACL,GACdA,EAAEM,iBAEFL,EAAKM,MAAMC,QAAQP,EAAKH,OACxBG,EAAKC,SAAS,CACZN,QAAS,8EAIX,OACEP,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,OAAA,CAAMkB,SAAUC,KAAKL,cACnBhB,EAAAC,EAAAC,cAAA,QAAA,KAAA,mBACAF,EAAAC,EAAAC,cAAA,QAAA,CAAOoB,KAAK,OAAOC,SAAUF,KAAKX,aAAcK,MAAOM,KAAKZ,MAAMF,mBAtBtDiB,EAAAA,WCmCPC,6MAhCbhB,MAAQ,CACNf,MAAO,CACL,CAACW,GAAI,EAAGE,QAAS,iBACjB,CAACF,GAAI,EAAGE,QAAS,uBAGrBZ,WAAa,SAACU,GACZ,IAAMX,EAAQkB,EAAKH,MAAMf,MAAMgC,OAAO,SAAA3B,GACpC,OAAOA,EAAKM,KAAOA,IAErBO,EAAKC,SAAS,CACZnB,MAAAA,OAGJyB,QAAU,SAACpB,GACTA,EAAKM,GAAKsB,KAAKC,SACf,IAAIlC,EAAK,GAAAmC,OAAAC,OAAAC,EAAA,EAAAD,CAAOlB,EAAKH,MAAMf,OAAlB,CAAyBK,IAClCa,EAAKC,SAAS,CACZnB,MAAAA,6EAIF,OACEM,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,oBAAd,UACAH,EAAAC,EAAAC,cAAC8B,EAAD,CAAOtC,MAAO2B,KAAKZ,MAAMf,MAAOC,WAAY0B,KAAK1B,aACjDK,EAAAC,EAAAC,cAAC+B,EAAD,CAASd,QAASE,KAAKF,kBA3BbK,EAAAA,WCMZU,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvC,QACfiC,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KCzEjEC,EAAAA,EAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAImB,IAAIC,sBAAwB1B,OAAOC,UAC3C0B,SAAW3B,OAAOC,SAAS0B,OAIvC,OAGF3B,OAAO4B,iBAAiB,OAAQ,WAC9B,IAAMvB,EAAK,GAAAZ,OAAMiC,sBAAN,sBAEP5B,GAiDV,SAAiCO,GAE/BwB,MAAMxB,GACHI,KAAK,SAAAqB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAM1B,KAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,KAAK,WAC7BT,OAAOC,SAASoC,aAKpBjC,EAAgBC,KAGnBa,MAAM,WACLF,QAAQC,IACN,mEArEAqB,CAAwBjC,GAIxBC,UAAUC,cAAc4B,MAAM1B,KAAK,WACjCO,QAAQC,IACN,+GAMJb,EAAgBC,MCzCxBkC\",\"sourcesContent\":[\"import React from 'react';\\n\\nconst Todos = ({todos, deleteTodo}) => {\\n\\n  const todoList = todos.length ? (\\n    todos.map(todo => {\\n      return (\\n        <div className=\\\"collection-item\\\" key={todo.id}>\\n          <span onClick={() => {deleteTodo(todo.id)}}>{todo.content}</span>\\n        </div>\\n      )\\n    })\\n  ) : (\\n    <p className=\\\"center\\\">You have no todo's left, yay!</p>\\n  );\\n\\n  return (\\n    <div className=\\\"todos collection\\\">\\n      {todoList}\\n    </div>\\n  )\\n}\\n\\nexport default Todos;\\n\",\"import React, { Component } from 'react'\\n\\nclass AddTodo extends Component {\\n  state = {\\n    content: ''\\n  }\\n  handleChange = (e) => {\\n    this.setState({\\n      content: e.target.value\\n    });\\n  }\\n  handleSubmit = (e) => {\\n    e.preventDefault();\\n    // call function to add a todo\\n    this.props.addTodo(this.state);\\n    this.setState({\\n      content: ''\\n    })\\n  }\\n  render() {\\n    return (\\n      <div>\\n        <form onSubmit={this.handleSubmit}>\\n          <label>Add a new todo:</label>\\n          <input type=\\\"text\\\" onChange={this.handleChange} value={this.state.content} />\\n        </form>\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default AddTodo\",\"import React, { Component } from 'react';\\nimport Todos from './Todos'\\nimport AddTodo from './AddTodo'\\n\\nclass App extends Component {\\n  state = {\\n    todos: [\\n      {id: 1, content: 'buy some milk'},\\n      {id: 2, content: 'play mario kart'}\\n    ]\\n  }\\n  deleteTodo = (id) => {\\n    const todos = this.state.todos.filter(todo => {\\n      return todo.id !== id\\n    });\\n    this.setState({\\n      todos\\n    });\\n  }\\n  addTodo = (todo) => {\\n    todo.id = Math.random();\\n    let todos = [...this.state.todos, todo];\\n    this.setState({\\n      todos\\n    });\\n  }\\n  render() {\\n    return (\\n      <div className=\\\"todo-app container\\\">\\n        <h1 className=\\\"center blue-text\\\">Todo's</h1>\\n        <Todos todos={this.state.todos} deleteTodo={this.deleteTodo} />\\n        <AddTodo addTodo={this.addTodo} />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport default function register() {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Lets check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport registerServiceWorker from './registerServiceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\nregisterServiceWorker();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e,t,n){},17:function(e,t,n){\"use strict\";n.r(t);var o=n(0),a=n.n(o),r=n(7),c=n.n(r),i=(n(15),n(8)),s=n(1),l=n(2),d=n(4),u=n(3),f=n(5),h=function(e){var t=e.todos,n=e.deleteTodo,o=t.length?t.map(function(e){return a.a.createElement(\"div\",{className:\"collection-item\",key:e.id},a.a.createElement(\"span\",{onClick:function(){n(e.id)}},e.content))}):a.a.createElement(\"p\",{className:\"center\"},\"You have no todo's left, yay!\");return a.a.createElement(\"div\",{className:\"todos collection\"},o)},m=function(e){function t(){var e,n;Object(s.a)(this,t);for(var o=arguments.length,a=new Array(o),r=0;r<o;r++)a[r]=arguments[r];return(n=Object(d.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(a)))).state={content:\"\"},n.handleChange=function(e){n.setState({content:e.target.value})},n.handleSubmit=function(e){e.preventDefault(),n.props.addTodo(n.state),n.setState({content:\"\"})},n}return Object(f.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return a.a.createElement(\"div\",null,a.a.createElement(\"form\",{onSubmit:this.handleSubmit},a.a.createElement(\"label\",null,\"Add a new todo:\"),a.a.createElement(\"input\",{type:\"text\",onChange:this.handleChange,value:this.state.content})))}}]),t}(o.Component),v=function(e){function t(){var e,n;Object(s.a)(this,t);for(var o=arguments.length,a=new Array(o),r=0;r<o;r++)a[r]=arguments[r];return(n=Object(d.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(a)))).state={todos:[{id:1,content:\"buy some milk\"},{id:2,content:\"play mario kart\"}]},n.deleteTodo=function(e){var t=n.state.todos.filter(function(t){return t.id!==e});n.setState({todos:t})},n.addTodo=function(e){e.id=Math.random();var t=[].concat(Object(i.a)(n.state.todos),[e]);n.setState({todos:t})},n}return Object(f.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return a.a.createElement(\"div\",{className:\"todo-app container\"},a.a.createElement(\"h1\",{className:\"center blue-text\"},\"Todo's\"),a.a.createElement(h,{todos:this.state.todos,deleteTodo:this.deleteTodo}),a.a.createElement(m,{addTodo:this.addTodo}))}}]),t}(o.Component),p=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function g(e){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var t=e.installing;t.onstatechange=function(){\"installed\"===t.state&&(navigator.serviceWorker.controller?console.log(\"New content is available; please refresh.\"):console.log(\"Content is cached for offline use.\"))}}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}c.a.render(a.a.createElement(v,null),document.getElementById(\"root\")),function(){if(\"serviceWorker\"in navigator){if(new URL(\"/najandz/todo-react\",window.location).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var e=\"\".concat(\"/najandz/todo-react\",\"/service-worker.js\");p?(function(e){fetch(e).then(function(t){404===t.status||-1===t.headers.get(\"content-type\").indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):g(e)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(e),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ\")})):g(e)})}}()},9:function(e,t,n){e.exports=n(17)}},[[9,2,1]]]);","extractedComments":[]}